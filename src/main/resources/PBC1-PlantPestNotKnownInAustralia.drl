package au.org.ala.sds.validation;

import au.org.ala.sds.model.SensitivityZone;
import au.org.ala.sds.validation.MessageFactory;
import au.org.ala.sds.model.SensitivityCategory;
import au.org.ala.sds.validation.RuleState;
import au.org.ala.sds.validation.ValidationReport;
import au.org.ala.sds.model.SensitiveTaxon;
import au.org.ala.sds.util.PlantPestUtils;
import java.util.List;
import java.util.Date;
import org.apache.log4j.Logger;
import org.drools.runtime.rule.RuleContext;

global ValidationReport validationReport;
global RuleState state;
global Logger logger;

import function au.org.ala.sds.validation.ValidationHelper.*;

rule "In Australia"
    when
        $zones : List()
        eval(SensitivityZone.isInAustralia($zones) && !state.isComplete())
    then
        state.setLoadable(false);
        warning(kcontext, MessageFactory.PLANT_PEST_MSG_CAT1_A1);
        logger.warn("PBC1 Rule '" + kcontext.getRule().getName() + "'");
end

rule "In External Territory"
    when
        $zones : List()
        eval(SensitivityZone.isExternalTerritory($zones))
    then
        state.setLoadable(true);
        info(kcontext, MessageFactory.PLANT_PEST_MSG_CAT1_B1);
        logger.warn("PBC1 Rule '" + kcontext.getRule().getName() + "'");
end

rule "In Torres Strait Zone"
    when
        $zones : List()
        eval(SensitivityZone.isInTorresStrait($zones))
    then        
        state.setDelegateRules("PBC5a");
        state.setComplete(false);
        logger.warn("PBC1 Rule '" + kcontext.getRule().getName() + "'");
end

rule "Not in Australia"
    when
        $zones : List()
        eval(SensitivityZone.isNotInAustralia($zones))
    then
        state.setLoadable(true);
        state.setAnnotation(MessageFactory.getMessageText(MessageFactory.PLANT_PEST_MSG_CAT1_D1));
        logger.warn("PBC1 Rule '" + kcontext.getRule().getName() + "'");
end

rule "Location not provided"
    when
        $zones : List()
        eval($zones.isEmpty())
    then
        state.setLoadable(false);
        info(kcontext, MessageFactory.PLANT_PEST_MSG_CAT1_A0);
        logger.warn("PBC1 Rule '" + kcontext.getRule().getName() + "'");
end
//NC: Category 8 rule is a subset of category 1 "In Australia" rule.
rule "Transient: non actionable"
    //give this rule a higher priority
    salience 10
    when
        $st : SensitiveTaxon()
        $zones : List()
        $date : Date()
        eval(SensitivityZone.isInAustralia($zones) && PlantPestUtils.isANonActionableTransientEvent($st, SensitivityCategory.PLANT_PEST_NOT_KNOWN_IN_AUSTRALIA, $date, $zones))
    then
        //the record can be loaded but it needs restricted attributes.
        state.setLoadable(true);
        state.setComplete(true);
        state.setRestricted(true);
        info(kcontext, MessageFactory.PLANT_PEST_MSG_CAT8, $st.getTaxonName());
        logger.warn("PBC8 Rule '" + kcontext.getRule().getName() + "'");
end