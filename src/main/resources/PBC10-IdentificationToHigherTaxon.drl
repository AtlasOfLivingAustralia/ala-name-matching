import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Date;
import org.apache.log4j.Logger;
import au.org.ala.sds.model.SensitiveTaxon;
import au.org.ala.sds.validation.MessageFactory;
import au.org.ala.sds.model.SensitivityCategory;
import au.org.ala.sds.validation.RuleState;
import au.org.ala.sds.validation.ValidationReport;
import au.org.ala.sds.model.SensitivityZone;
import au.org.ala.sds.util.PlantPestUtils;

import org.drools.runtime.rule.RuleContext;

global ValidationReport validationReport;
global RuleState state;
global Logger logger;

import function au.org.ala.sds.validation.ValidationHelper.*;

rule "PBC10-IdentificationToHigherTaxon"
    when
        $data: Map()
        $st : SensitiveTaxon()
        $zones : List()
        eval((SensitivityZone.isInAustralia($zones) ||SensitivityZone.isExternalTerritory($zones) || SensitivityZone.isInTorresStrait($zones)) && PlantPestUtils.isExactMatch($data,$st))
    then
        // Category 9 is loadable but the data available is restricted from the general public
        state.setLoadable(true);
        state.setComplete(true);
        state.setRestricted(true);
        info(kcontext, MessageFactory.PLANT_PEST_MSG_CAT10, $st.getTaxonName());
        logger.warn("PBC10 Rule '" + kcontext.getRule().getName() + "'");
end

rule "Not Extact Match or Outside Australia"
    when
        $data: Map()
        $st : SensitiveTaxon()
        $zones : List()
        eval(!(SensitivityZone.isInAustralia($zones) ||SensitivityZone.isExternalTerritory($zones) || SensitivityZone.isInTorresStrait($zones)) || !PlantPestUtils.isExactMatch($data,$st))
    then
        state.setLoadable(true);
        logger.warn("PBC10 Rule Not applicable in this situation");
end